This file is part of MXE. See LICENSE.md for licensing information.

Contains ad hoc patches for cross building.

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: "fix@me" <fix@me>
Date: Mon, 27 Sep 2010 12:00:52 +0200
Subject: [PATCH 1/3] fix .pc requirements


diff --git a/librsvg.pc.in b/librsvg.pc.in
index 1111111..2222222 100644
--- a/librsvg.pc.in
+++ b/librsvg.pc.in
@@ -9,7 +9,7 @@ css_supported=true
 Name: librsvg
 Description: library that renders svg files
 Version: @VERSION@
-Requires: glib-2.0 gio-2.0 gdk-pixbuf-2.0 cairo
+Requires: glib-2.0 gio-2.0 gdk-pixbuf-2.0 cairo libgsf-1 pangocairo libcroco-0.6
 Requires.private:
 Libs: -L${libdir} -lrsvg-@RSVG_API_MAJOR_VERSION@ -lm
 Cflags: -I${includedir}/librsvg-@RSVG_API_VERSION@

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Timothy Gu <timothygu99@gmail.com>
Date: Wed, 17 Sep 2014 17:00:13 -0700
Subject: [PATCH 2/3] Disable checking gio-unix-2.0 and disable rsvg_convert
 program

rsvg_convert uses Unix features.

I decided not to change the Makefile.am and configure.in because autoreconf
doesn't work on librsvg. Didn't investigate further.

diff --git a/Makefile.in b/Makefile.in
index 1111111..2222222 100644
--- a/Makefile.in
+++ b/Makefile.in
@@ -91,7 +91,7 @@ PRE_UNINSTALL = :
 POST_UNINSTALL = :
 build_triplet = @build@
 host_triplet = @host@
-bin_PROGRAMS = rsvg-convert$(EXEEXT)
+#bin_PROGRAMS = rsvg-convert$(EXEEXT)
 @ENABLE_VAPIGEN_TRUE@@HAVE_INTROSPECTION_TRUE@am__append_1 = $(VAPIGEN_VAPIS)
 subdir = .
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
diff --git a/configure b/configure
index 1111111..2222222 100755
--- a/configure
+++ b/configure
@@ -17066,12 +17066,12 @@ if test -n "$RSVG_CONVERT_CFLAGS"; then
     pkg_cv_RSVG_CONVERT_CFLAGS="$RSVG_CONVERT_CFLAGS"
  elif test -n "$PKG_CONFIG"; then
     if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"gio-2.0 gio-unix-2.0 gdk-pixbuf-2.0 cairo pangocairo\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "gio-2.0 gio-unix-2.0 gdk-pixbuf-2.0 cairo pangocairo") 2>&5
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"gio-2.0 gdk-pixbuf-2.0 cairo pangocairo\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "gio-2.0 gdk-pixbuf-2.0 cairo pangocairo") 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
-  pkg_cv_RSVG_CONVERT_CFLAGS=`$PKG_CONFIG --cflags "gio-2.0 gio-unix-2.0 gdk-pixbuf-2.0 cairo pangocairo" 2>/dev/null`
+  pkg_cv_RSVG_CONVERT_CFLAGS=`$PKG_CONFIG --cflags "gio-2.0 gdk-pixbuf-2.0 cairo pangocairo" 2>/dev/null`
 		      test "x$?" != "x0" && pkg_failed=yes
 else
   pkg_failed=yes
@@ -17083,12 +17083,12 @@ if test -n "$RSVG_CONVERT_LIBS"; then
     pkg_cv_RSVG_CONVERT_LIBS="$RSVG_CONVERT_LIBS"
  elif test -n "$PKG_CONFIG"; then
     if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"gio-2.0 gio-unix-2.0 gdk-pixbuf-2.0 cairo pangocairo\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "gio-2.0 gio-unix-2.0 gdk-pixbuf-2.0 cairo pangocairo") 2>&5
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"gio-2.0 gdk-pixbuf-2.0 cairo pangocairo\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "gio-2.0 gdk-pixbuf-2.0 cairo pangocairo") 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
-  pkg_cv_RSVG_CONVERT_LIBS=`$PKG_CONFIG --libs "gio-2.0 gio-unix-2.0 gdk-pixbuf-2.0 cairo pangocairo" 2>/dev/null`
+  pkg_cv_RSVG_CONVERT_LIBS=`$PKG_CONFIG --libs "gio-2.0 gdk-pixbuf-2.0 cairo pangocairo" 2>/dev/null`
 		      test "x$?" != "x0" && pkg_failed=yes
 else
   pkg_failed=yes
@@ -17109,14 +17109,14 @@ else
         _pkg_short_errors_supported=no
 fi
         if test $_pkg_short_errors_supported = yes; then
-	        RSVG_CONVERT_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "gio-2.0 gio-unix-2.0 gdk-pixbuf-2.0 cairo pangocairo" 2>&1`
+	        RSVG_CONVERT_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "gio-2.0 gdk-pixbuf-2.0 cairo pangocairo" 2>&1`
         else
-	        RSVG_CONVERT_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "gio-2.0 gio-unix-2.0 gdk-pixbuf-2.0 cairo pangocairo" 2>&1`
+	        RSVG_CONVERT_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "gio-2.0 gdk-pixbuf-2.0 cairo pangocairo" 2>&1`
         fi
 	# Put the nasty error message in config.log where it belongs
 	echo "$RSVG_CONVERT_PKG_ERRORS" >&5
 
-	as_fn_error $? "Package requirements (gio-2.0 gio-unix-2.0 gdk-pixbuf-2.0 cairo pangocairo) were not met:
+	as_fn_error $? "Package requirements (gio-2.0 gdk-pixbuf-2.0 cairo pangocairo) were not met:
 
 $RSVG_CONVERT_PKG_ERRORS
 

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Gregorio Litenstein <g.litenstein@gmail.com>
Date: Sun, 20 Oct 2019 15:27:56 -0300
Subject: [PATCH 3/3] Change LTO to Thin-LTO


diff --git a/Cargo.toml b/Cargo.toml
index 1111111..2222222 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -6,8 +6,8 @@ members = [
 ]
 
 [profile.release]
-lto = true
+lto = 'thin'
 debug = true
 
 [profile.bench]
-lto = true
+lto = 'thin'
