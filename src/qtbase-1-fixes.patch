This file is part of MXE. See LICENSE.md for licensing information.

From 4fe0644890b8d105ac46094a913b292386c1a67a Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Wed, 26 Aug 2015 12:45:43 +0100
Subject: [PATCH 1/7] cmake: Rearrange STATIC vs INTERFACE targets

Otherwise we attempt to add_library(Qt5::UiPlugin STATIC IMPORTED)
for header-only modules when building Qt5 statically.

Source: https://git.io/vzWJz
See also: https://github.com/mxe/mxe/issues/1185

diff --git a/mkspecs/features/data/cmake/Qt5BasicConfig.cmake.in b/mkspecs/features/data/cmake/Qt5BasicConfig.cmake.in
index db18dbece6..6b4457569d 100644
--- a/mkspecs/features/data/cmake/Qt5BasicConfig.cmake.in
+++ b/mkspecs/features/data/cmake/Qt5BasicConfig.cmake.in
@@ -370,6 +370,9 @@ if (NOT TARGET Qt5::$${CMAKE_MODULE_NAME})
     list(APPEND _Qt5$${CMAKE_MODULE_NAME}_LIB_DEPENDENCIES \"$${CMAKE_INTERFACE_QT5_MODULE_DEPS}\")
 !!ENDIF
 
+!!IF equals(TEMPLATE, aux)
+    add_library(Qt5::$${CMAKE_MODULE_NAME} INTERFACE IMPORTED)
+!!ELSE
 !!IF !isEmpty(CMAKE_STATIC_TYPE)
     if(NOT Qt5_EXCLUDE_STATIC_DEPENDENCIES)
 !!IF !isEmpty(CMAKE_DEBUG_TYPE)
@@ -411,9 +414,6 @@ if (NOT TARGET Qt5::$${CMAKE_MODULE_NAME})
     add_library(Qt5::$${CMAKE_MODULE_NAME} STATIC IMPORTED)
     set_property(TARGET Qt5::$${CMAKE_MODULE_NAME} PROPERTY IMPORTED_LINK_INTERFACE_LANGUAGES "CXX")
 !!ENDIF
-!!ELSE
-!!IF equals(TEMPLATE, aux)
-    add_library(Qt5::$${CMAKE_MODULE_NAME} INTERFACE IMPORTED)
 !!ELSE
     add_library(Qt5::$${CMAKE_MODULE_NAME} SHARED IMPORTED)
 !!ENDIF
-- 
2.30.2


From d9fd8ae37b97ee6d6ff428b2475ab97fa63deee6 Mon Sep 17 00:00:00 2001
From: Mark Brand <mabrand@mabrand.nl>
Date: Sun, 11 Jun 2017 00:27:41 +0200
Subject: [PATCH 2/7] use pkg-config for harfbuzz

Change-Id: Ia65cbb90fd180f1bc10ce077a9a8323a48e51421

diff --git a/src/gui/configure.json b/src/gui/configure.json
index c8c4864eca..f56b2b94f7 100644
--- a/src/gui/configure.json
+++ b/src/gui/configure.json
@@ -303,7 +303,8 @@
             },
             "headers": "harfbuzz/hb.h",
             "sources": [
-                "-lharfbuzz"
+               { "type": "pkgConfig", "args": "harfbuzz" },
+               "-lharfbuzz"
             ]
         },
         "imf": {
-- 
2.30.2


From e257e2e1b4fd7907dac0d4d56d05379eb973ce51 Mon Sep 17 00:00:00 2001
From: Thiago Macieira <thiago.macieira@intel.com>
Date: Mon, 18 Jan 2021 07:40:54 -0800
Subject: [PATCH 3/7] Fix build with GCC 11: include <limits>

Fixes: QTBUG-90395
Change-Id: Iecc74d2000eb40dfbe7bfffd165b5dd3708b7a40
(cherry picked from commit 9c56d4da2ff631a8c1c30475bd792f6c86bda53c)
Reviewed-by: Edward Welbourne <edward.welbourne@qt.io>
(cherry picked from commit b2af6332ea37e45ab230a7a5d2d278f86d961b83)

diff --git a/src/corelib/global/qendian.h b/src/corelib/global/qendian.h
index 257efbbdbe..339f53abb6 100644
--- a/src/corelib/global/qendian.h
+++ b/src/corelib/global/qendian.h
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2016 The Qt Company Ltd.
-** Copyright (C) 2016 Intel Corporation.
+** Copyright (C) 2021 The Qt Company Ltd.
+** Copyright (C) 2021 Intel Corporation.
 ** Contact: https://www.qt.io/licensing/
 **
 ** This file is part of the QtCore module of the Qt Toolkit.
@@ -44,6 +44,8 @@
 #include <QtCore/qfloat16.h>
 #include <QtCore/qglobal.h>
 
+#include <limits>
+
 // include stdlib.h and hope that it defines __GLIBC__ for glibc-based systems
 #include <stdlib.h>
 #include <string.h>
diff --git a/src/corelib/global/qfloat16.h b/src/corelib/global/qfloat16.h
index c7a9c87af3..5302be072e 100644
--- a/src/corelib/global/qfloat16.h
+++ b/src/corelib/global/qfloat16.h
@@ -43,6 +43,7 @@
 
 #include <QtCore/qglobal.h>
 #include <QtCore/qmetatype.h>
+#include <limits>
 #include <string.h>
 
 #if defined(QT_COMPILER_SUPPORTS_F16C) && defined(__AVX2__) && !defined(__F16C__)
-- 
2.30.2


From f681fc781277f35499008b99e94cc6049885e01c Mon Sep 17 00:00:00 2001
From: Ville Voutilainen <ville.voutilainen@qt.io>
Date: Mon, 18 Jan 2021 09:58:17 +0200
Subject: [PATCH 4/7] Build fixes for GCC 11

Task-number: QTBUG-89977
Change-Id: Ic1b7ddbffb8a0a00f8c621d09a868f1d94a52c21
Reviewed-by: Lars Knoll <lars.knoll@qt.io>
Reviewed-by: Thiago Macieira <thiago.macieira@intel.com>
(cherry picked from commit 813a928c7c3cf98670b6043149880ed5c955efb9)

diff --git a/src/corelib/text/qbytearraymatcher.h b/src/corelib/text/qbytearraymatcher.h
index 0eedfc1d20..f5f9bef7b8 100644
--- a/src/corelib/text/qbytearraymatcher.h
+++ b/src/corelib/text/qbytearraymatcher.h
@@ -42,6 +42,8 @@
 
 #include <QtCore/qbytearray.h>
 
+#include <limits>
+
 QT_BEGIN_NAMESPACE
 
 
diff --git a/src/corelib/tools/qsharedpointer_impl.h b/src/corelib/tools/qsharedpointer_impl.h
index 790c187cb9..4aee98af53 100644
--- a/src/corelib/tools/qsharedpointer_impl.h
+++ b/src/corelib/tools/qsharedpointer_impl.h
@@ -155,9 +155,6 @@ namespace QtSharedPointer {
 #endif
         inline void checkQObjectShared(...) { }
         inline void setQObjectShared(...) { }
-
-        inline void operator delete(void *ptr) { ::operator delete(ptr); }
-        inline void operator delete(void *, void *) { }
     };
     // sizeof(ExternalRefCountData) = 12 (32-bit) / 16 (64-bit)
 
diff --git a/src/plugins/platforms/xcb/qxcbwindow.cpp b/src/plugins/platforms/xcb/qxcbwindow.cpp
index 9e7e1a5572..f0866a90ac 100644
--- a/src/plugins/platforms/xcb/qxcbwindow.cpp
+++ b/src/plugins/platforms/xcb/qxcbwindow.cpp
@@ -698,7 +698,7 @@ void QXcbWindow::show()
         if (isTransient(window())) {
             const QWindow *tp = window()->transientParent();
             if (tp && tp->handle())
-                transientXcbParent = static_cast<const QXcbWindow *>(tp->handle())->winId();
+                transientXcbParent = tp->handle()->winId();
             // Default to client leader if there is no transient parent, else modal dialogs can
             // be hidden by their parents.
             if (!transientXcbParent)
-- 
2.30.2


From dbedf2727d85fa97b2a287a7192f3b1eabec4589 Mon Sep 17 00:00:00 2001
From: Ulf Hermann <ulf.hermann@qt.io>
Date: Wed, 20 Jan 2021 10:42:36 +0100
Subject: [PATCH 5/7] Partially revert 813a928c7c3cf98670b6043149880ed5c955efb9

Otherwise ASAN complains about mismatched new/delete.

Change-Id: I76ddcc388309e20055c93c68b9b6fa8a11b884e1
Reviewed-by: Andrei Golubev <andrei.golubev@qt.io>
Reviewed-by: Ville Voutilainen <ville.voutilainen@qt.io>
(cherry picked from commit 606b03d0a35e71565c3a91588ef2db45b9262e27)

diff --git a/src/corelib/tools/qsharedpointer_impl.h b/src/corelib/tools/qsharedpointer_impl.h
index 4aee98af53..790c187cb9 100644
--- a/src/corelib/tools/qsharedpointer_impl.h
+++ b/src/corelib/tools/qsharedpointer_impl.h
@@ -155,6 +155,9 @@ namespace QtSharedPointer {
 #endif
         inline void checkQObjectShared(...) { }
         inline void setQObjectShared(...) { }
+
+        inline void operator delete(void *ptr) { ::operator delete(ptr); }
+        inline void operator delete(void *, void *) { }
     };
     // sizeof(ExternalRefCountData) = 12 (32-bit) / 16 (64-bit)
 
-- 
2.30.2


From befb5324e3e00d0b533f4df61483d0d0ccf5db08 Mon Sep 17 00:00:00 2001
From: Jonas Kvinge <jonas@jkvinge.net>
Date: Wed, 5 May 2021 14:57:25 +0200
Subject: [PATCH 6/7] Add missing limits include

Change-Id: I927b26d4537478f9130a1ff16d23941c723291fe

diff --git a/src/corelib/tools/qoffsetstringarray_p.h b/src/corelib/tools/qoffsetstringarray_p.h
index 4dd9e9603b..c94d64d9aa 100644
--- a/src/corelib/tools/qoffsetstringarray_p.h
+++ b/src/corelib/tools/qoffsetstringarray_p.h
@@ -55,6 +55,7 @@
 
 #include <tuple>
 #include <array>
+#include <limits>
 
 QT_BEGIN_NAMESPACE
 
-- 
2.30.2


From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Tony Theodore <tonyt@logyst.com>
Date: Thu, 11 Nov 2021 18:18:25 +1100
Subject: [PATCH 7/7] Add missing macOS header file that was indirectly
 included before

based on:
https://code.qt.io/cgit/qt/qtbase.git/commit/src/plugins/platforms/cocoa?id=dece6f5840463ae2ddf927d65eb1b3680e34a547

diff --git a/src/plugins/platforms/cocoa/qiosurfacegraphicsbuffer.h b/src/plugins/platforms/cocoa/qiosurfacegraphicsbuffer.h
index 1111111..2222222 100644
--- a/src/plugins/platforms/cocoa/qiosurfacegraphicsbuffer.h
+++ b/src/plugins/platforms/cocoa/qiosurfacegraphicsbuffer.h
@@ -42,6 +42,7 @@
 
 #include <qpa/qplatformgraphicsbuffer.h>
 #include <private/qcore_mac_p.h>
+#include <CoreGraphics/CGColorSpace.h>
 
 QT_BEGIN_NAMESPACE
 

commit 696ff656d0ec521653a0095db09fd87c859212bb
Author: Martchus <martchus@gmx.net>
Date:   Sat Jun 26 22:24:12 2021 +0200

    Fix crashes in rasterization code using setjmp
    
    * Use C++ exceptions instead of setjmp to workaround crashes
    * The setjmp/longjmp code crashes when compiling for x86_64-w64-mingw32
      with GCC 11 and optimizations enabled¹. It crashes when jumping back
      to handle the case of insufficient memory. This change uses C++
      exceptions instead (turning the compile unit into a C++ unit instead
      of just using C) which should behave identical but don't seem to
      crash.
    * Fix rendering certain SVGs and possibly other graphics
    
    Change-Id: I01937d13569dd01ab4cb1f608020544c93bc343c
    
    ---
    
    ¹ See https://bugreports.qt.io/browse/QTBUG-94692 for details.

diff --git a/src/gui/painting/painting.pri b/src/gui/painting/painting.pri
index c68e8d6e9a..a144ce9b33 100644
--- a/src/gui/painting/painting.pri
+++ b/src/gui/painting/painting.pri
@@ -1,5 +1,7 @@
 # Qt gui library, paint module
 
+CONFIG += exceptions
+
 HEADERS += \
         painting/qbackingstore.h \
         painting/qbezier_p.h \
@@ -80,7 +82,7 @@ SOURCES += \
         painting/qcosmeticstroker.cpp \
         painting/qdrawhelper.cpp \
         painting/qemulationpaintengine.cpp \
-        painting/qgrayraster.c \
+        painting/qgrayraster.cpp \
         painting/qicc.cpp \
         painting/qimagescale.cpp \
         painting/qmatrix.cpp \
diff --git a/src/gui/painting/qgrayraster.c b/src/gui/painting/qgrayraster.cpp
similarity index 98%
rename from src/gui/painting/qgrayraster.c
rename to src/gui/painting/qgrayraster.cpp
index 0143e9b602..803a676e1a 100644
--- a/src/gui/painting/qgrayraster.c
+++ b/src/gui/painting/qgrayraster.cpp
@@ -39,7 +39,7 @@
 
 /***************************************************************************/
 /*                                                                         */
-/*  qgrayraster.c, derived from ftgrays.c                                  */
+/*  qgrayraster.cpp, derived from ftgrays.c                                */
 /*                                                                         */
 /*    A new `perfect' anti-aliasing renderer (body).                       */
 /*                                                                         */
@@ -157,17 +157,12 @@
 #  include <vxWorksCommon.h>    /* needed for setjmp.h */
 #endif
 #include <string.h>             /* for qt_ft_memcpy() */
-#include <setjmp.h>
 #include <limits.h>
 
 #define QT_FT_UINT_MAX  UINT_MAX
 
 #define qt_ft_memset   memset
 
-#define qt_ft_setjmp   setjmp
-#define qt_ft_longjmp  longjmp
-#define qt_ft_jmp_buf  jmp_buf
-
 #include <stddef.h>
 typedef ptrdiff_t  QT_FT_PtrDist;
 
@@ -177,6 +172,8 @@ typedef ptrdiff_t  QT_FT_PtrDist;
 #define ErrRaster_Memory_Overflow   -4
 #define ErrRaster_OutOfMemory       -6
 
+struct RasterMemoryOverflow {};
+
 #define QT_FT_BEGIN_HEADER
 #define QT_FT_END_HEADER
 
@@ -312,8 +309,6 @@ QT_FT_END_STMNT
     int  band_size;
     int  band_shoot;
 
-    qt_ft_jmp_buf  jump_buffer;
-
     void*       buffer;
     long        buffer_size;
 
@@ -335,12 +330,14 @@ QT_FT_END_STMNT
 
   } TRaster, *PRaster;
 
+  extern "C" {
   int q_gray_rendered_spans(TRaster *raster)
   {
     if ( raster && raster->worker )
       return raster->worker->skip_spans > 0 ? 0 : -raster->worker->skip_spans;
     return 0;
   }
+  }
 
   /*************************************************************************/
   /*                                                                       */
@@ -406,7 +403,6 @@ QT_FT_END_STMNT
     ras.max_ey = ( ras.max_ey + 63 ) >> 6;
   }
 
-
   /*************************************************************************/
   /*                                                                       */
   /* Record the current cell in the table.                                 */
@@ -435,7 +431,7 @@ QT_FT_END_STMNT
     }
 
     if ( ras.num_cells >= ras.max_cells )
-      qt_ft_longjmp( ras.jump_buffer, 1 );
+      throw RasterMemoryOverflow();
 
     cell        = ras.cells + ras.num_cells++;
     cell->x     = x;
@@ -1507,7 +1503,7 @@ QT_FT_END_STMNT
 
       QT_FT_TRACE5(( "  move to (%.2f, %.2f)\n",
                      v_start.x / 64.0, v_start.y / 64.0 ));
-      error = gray_move_to( &v_start, user );
+      error = gray_move_to( &v_start, static_cast<PWorker>(user) );
       if ( error )
         goto Exit;
 
@@ -1529,7 +1525,7 @@ QT_FT_END_STMNT
 
             QT_FT_TRACE5(( "  line to (%.2f, %.2f)\n",
                            vec.x / 64.0, vec.y / 64.0 ));
-            gray_render_line(user, UPSCALE(vec.x), UPSCALE(vec.y));
+            gray_render_line(static_cast<PWorker>(user), UPSCALE(vec.x), UPSCALE(vec.y));
             continue;
           }
 
@@ -1558,7 +1554,7 @@ QT_FT_END_STMNT
                                " with control (%.2f, %.2f)\n",
                                vec.x / 64.0, vec.y / 64.0,
                                v_control.x / 64.0, v_control.y / 64.0 ));
-                gray_render_conic(user, &v_control, &vec);
+                gray_render_conic(static_cast<PWorker>(user), &v_control, &vec);
                 continue;
               }
 
@@ -1572,7 +1568,7 @@ QT_FT_END_STMNT
                              " with control (%.2f, %.2f)\n",
                              v_middle.x / 64.0, v_middle.y / 64.0,
                              v_control.x / 64.0, v_control.y / 64.0 ));
-              gray_render_conic(user, &v_control, &v_middle);
+              gray_render_conic(static_cast<PWorker>(user), &v_control, &v_middle);
 
               v_control = vec;
               goto Do_Conic;
@@ -1582,7 +1578,7 @@ QT_FT_END_STMNT
                            " with control (%.2f, %.2f)\n",
                            v_start.x / 64.0, v_start.y / 64.0,
                            v_control.x / 64.0, v_control.y / 64.0 ));
-            gray_render_conic(user, &v_control, &v_start);
+            gray_render_conic(static_cast<PWorker>(user), &v_control, &v_start);
             goto Close;
           }
 
@@ -1617,7 +1613,7 @@ QT_FT_END_STMNT
                              vec.x / 64.0, vec.y / 64.0,
                              vec1.x / 64.0, vec1.y / 64.0,
                              vec2.x / 64.0, vec2.y / 64.0 ));
-              gray_render_cubic(user, &vec1, &vec2, &vec);
+              gray_render_cubic(static_cast<PWorker>(user), &vec1, &vec2, &vec);
               continue;
             }
 
@@ -1626,7 +1622,7 @@ QT_FT_END_STMNT
                            v_start.x / 64.0, v_start.y / 64.0,
                            vec1.x / 64.0, vec1.y / 64.0,
                            vec2.x / 64.0, vec2.y / 64.0 ));
-            gray_render_cubic(user, &vec1, &vec2, &v_start);
+            gray_render_cubic(static_cast<PWorker>(user), &vec1, &vec2, &v_start);
             goto Close;
           }
         }
@@ -1635,7 +1631,7 @@ QT_FT_END_STMNT
       /* close the contour with a line segment */
       QT_FT_TRACE5(( "  line to (%.2f, %.2f)\n",
                      v_start.x / 64.0, v_start.y / 64.0 ));
-      gray_render_line(user, UPSCALE(v_start.x), UPSCALE(v_start.y));
+      gray_render_line(static_cast<PWorker>(user), UPSCALE(v_start.x), UPSCALE(v_start.y));
 
    Close:
       first = last + 1;
@@ -1663,14 +1659,11 @@ QT_FT_END_STMNT
   {
     volatile int  error = 0;
 
-    if ( qt_ft_setjmp( ras.jump_buffer ) == 0 )
-    {
+    try {
       error = QT_FT_Outline_Decompose( &ras.outline, &ras );
       if ( !ras.invalid )
         gray_record_cell( RAS_VAR );
-    }
-    else
-    {
+    } catch (const RasterMemoryOverflow &) {
       error = ErrRaster_Memory_Overflow;
     }
 
@@ -1932,7 +1925,7 @@ QT_FT_END_STMNT
   static int
   gray_raster_new( QT_FT_Raster*  araster )
   {
-    *araster = malloc(sizeof(TRaster));
+    *araster = static_cast<TRaster *>(malloc(sizeof(TRaster)));
     if (!*araster) {
         *araster = 0;
         return ErrRaster_Memory_Overflow;
diff --git a/src/gui/painting/qt_attribution.json b/src/gui/painting/qt_attribution.json
index 7b16e8c211..38f03b73d8 100644
--- a/src/gui/painting/qt_attribution.json
+++ b/src/gui/painting/qt_attribution.json
@@ -4,7 +4,7 @@
         "Name": "Anti-aliasing rasterizer from FreeType 2",
         "QDocModule": "qtgui",
         "QtUsage": "Used in Qt GUI.",
-        "Path": "qgrayraster.c",
+        "Path": "qgrayraster.cpp",
 
         "Description": "FreeType is a freely available software library to render fonts.",
         "Homepage": "http://www.freetype.org",


commit 696ff656d0ec521653a0095db09fd87c859212bb
Author: Martchus <martchus@gmx.net>
Date:   Sat Jun 26 22:24:12 2021 +0200

    Fix crashes in rasterization code using setjmp
    
    * Use C++ exceptions instead of setjmp to workaround crashes
    * The setjmp/longjmp code crashes when compiling for x86_64-w64-mingw32
      with GCC 11 and optimizations enabled¹. It crashes when jumping back
      to handle the case of insufficient memory. This change uses C++
      exceptions instead (turning the compile unit into a C++ unit instead
      of just using C) which should behave identical but don't seem to
      crash.
    * Fix rendering certain SVGs and possibly other graphics
    
    Change-Id: I01937d13569dd01ab4cb1f608020544c93bc343c
    
    ---
    
    ¹ See https://bugreports.qt.io/browse/QTBUG-94692 for details.

diff --git a/src/gui/painting/painting.pri b/src/gui/painting/painting.pri
index c68e8d6e9a..a144ce9b33 100644
--- a/src/gui/painting/painting.pri
+++ b/src/gui/painting/painting.pri
@@ -1,5 +1,7 @@
 # Qt gui library, paint module
 
+CONFIG += exceptions
+
 HEADERS += \
         painting/qbackingstore.h \
         painting/qbezier_p.h \
@@ -80,7 +82,7 @@ SOURCES += \
         painting/qcosmeticstroker.cpp \
         painting/qdrawhelper.cpp \
         painting/qemulationpaintengine.cpp \
-        painting/qgrayraster.c \
+        painting/qgrayraster.cpp \
         painting/qicc.cpp \
         painting/qimagescale.cpp \
         painting/qmatrix.cpp \
diff --git a/src/gui/painting/qgrayraster.c b/src/gui/painting/qgrayraster.cpp
similarity index 98%
rename from src/gui/painting/qgrayraster.c
rename to src/gui/painting/qgrayraster.cpp
index 0143e9b602..803a676e1a 100644
--- a/src/gui/painting/qgrayraster.c
+++ b/src/gui/painting/qgrayraster.cpp
@@ -39,7 +39,7 @@
 
 /***************************************************************************/
 /*                                                                         */
-/*  qgrayraster.c, derived from ftgrays.c                                  */
+/*  qgrayraster.cpp, derived from ftgrays.c                                */
 /*                                                                         */
 /*    A new `perfect' anti-aliasing renderer (body).                       */
 /*                                                                         */
@@ -157,17 +157,12 @@
 #  include <vxWorksCommon.h>    /* needed for setjmp.h */
 #endif
 #include <string.h>             /* for qt_ft_memcpy() */
-#include <setjmp.h>
 #include <limits.h>
 
 #define QT_FT_UINT_MAX  UINT_MAX
 
 #define qt_ft_memset   memset
 
-#define qt_ft_setjmp   setjmp
-#define qt_ft_longjmp  longjmp
-#define qt_ft_jmp_buf  jmp_buf
-
 #include <stddef.h>
 typedef ptrdiff_t  QT_FT_PtrDist;
 
@@ -177,6 +172,8 @@ typedef ptrdiff_t  QT_FT_PtrDist;
 #define ErrRaster_Memory_Overflow   -4
 #define ErrRaster_OutOfMemory       -6
 
+struct RasterMemoryOverflow {};
+
 #define QT_FT_BEGIN_HEADER
 #define QT_FT_END_HEADER
 
@@ -312,8 +309,6 @@ QT_FT_END_STMNT
     int  band_size;
     int  band_shoot;
 
-    qt_ft_jmp_buf  jump_buffer;
-
     void*       buffer;
     long        buffer_size;
 
@@ -335,12 +330,14 @@ QT_FT_END_STMNT
 
   } TRaster, *PRaster;
 
+  extern "C" {
   int q_gray_rendered_spans(TRaster *raster)
   {
     if ( raster && raster->worker )
       return raster->worker->skip_spans > 0 ? 0 : -raster->worker->skip_spans;
     return 0;
   }
+  }
 
   /*************************************************************************/
   /*                                                                       */
@@ -406,7 +403,6 @@ QT_FT_END_STMNT
     ras.max_ey = ( ras.max_ey + 63 ) >> 6;
   }
 
-
   /*************************************************************************/
   /*                                                                       */
   /* Record the current cell in the table.                                 */
@@ -435,7 +431,7 @@ QT_FT_END_STMNT
     }
 
     if ( ras.num_cells >= ras.max_cells )
-      qt_ft_longjmp( ras.jump_buffer, 1 );
+      throw RasterMemoryOverflow();
 
     cell        = ras.cells + ras.num_cells++;
     cell->x     = x;
@@ -1507,7 +1503,7 @@ QT_FT_END_STMNT
 
       QT_FT_TRACE5(( "  move to (%.2f, %.2f)\n",
                      v_start.x / 64.0, v_start.y / 64.0 ));
-      error = gray_move_to( &v_start, user );
+      error = gray_move_to( &v_start, static_cast<PWorker>(user) );
       if ( error )
         goto Exit;
 
@@ -1529,7 +1525,7 @@ QT_FT_END_STMNT
 
             QT_FT_TRACE5(( "  line to (%.2f, %.2f)\n",
                            vec.x / 64.0, vec.y / 64.0 ));
-            gray_render_line(user, UPSCALE(vec.x), UPSCALE(vec.y));
+            gray_render_line(static_cast<PWorker>(user), UPSCALE(vec.x), UPSCALE(vec.y));
             continue;
           }
 
@@ -1558,7 +1554,7 @@ QT_FT_END_STMNT
                                " with control (%.2f, %.2f)\n",
                                vec.x / 64.0, vec.y / 64.0,
                                v_control.x / 64.0, v_control.y / 64.0 ));
-                gray_render_conic(user, &v_control, &vec);
+                gray_render_conic(static_cast<PWorker>(user), &v_control, &vec);
                 continue;
               }
 
@@ -1572,7 +1568,7 @@ QT_FT_END_STMNT
                              " with control (%.2f, %.2f)\n",
                              v_middle.x / 64.0, v_middle.y / 64.0,
                              v_control.x / 64.0, v_control.y / 64.0 ));
-              gray_render_conic(user, &v_control, &v_middle);
+              gray_render_conic(static_cast<PWorker>(user), &v_control, &v_middle);
 
               v_control = vec;
               goto Do_Conic;
@@ -1582,7 +1578,7 @@ QT_FT_END_STMNT
                            " with control (%.2f, %.2f)\n",
                            v_start.x / 64.0, v_start.y / 64.0,
                            v_control.x / 64.0, v_control.y / 64.0 ));
-            gray_render_conic(user, &v_control, &v_start);
+            gray_render_conic(static_cast<PWorker>(user), &v_control, &v_start);
             goto Close;
           }
 
@@ -1617,7 +1613,7 @@ QT_FT_END_STMNT
                              vec.x / 64.0, vec.y / 64.0,
                              vec1.x / 64.0, vec1.y / 64.0,
                              vec2.x / 64.0, vec2.y / 64.0 ));
-              gray_render_cubic(user, &vec1, &vec2, &vec);
+              gray_render_cubic(static_cast<PWorker>(user), &vec1, &vec2, &vec);
               continue;
             }
 
@@ -1626,7 +1622,7 @@ QT_FT_END_STMNT
                            v_start.x / 64.0, v_start.y / 64.0,
                            vec1.x / 64.0, vec1.y / 64.0,
                            vec2.x / 64.0, vec2.y / 64.0 ));
-            gray_render_cubic(user, &vec1, &vec2, &v_start);
+            gray_render_cubic(static_cast<PWorker>(user), &vec1, &vec2, &v_start);
             goto Close;
           }
         }
@@ -1635,7 +1631,7 @@ QT_FT_END_STMNT
       /* close the contour with a line segment */
       QT_FT_TRACE5(( "  line to (%.2f, %.2f)\n",
                      v_start.x / 64.0, v_start.y / 64.0 ));
-      gray_render_line(user, UPSCALE(v_start.x), UPSCALE(v_start.y));
+      gray_render_line(static_cast<PWorker>(user), UPSCALE(v_start.x), UPSCALE(v_start.y));
 
    Close:
       first = last + 1;
@@ -1663,14 +1659,11 @@ QT_FT_END_STMNT
   {
     volatile int  error = 0;
 
-    if ( qt_ft_setjmp( ras.jump_buffer ) == 0 )
-    {
+    try {
       error = QT_FT_Outline_Decompose( &ras.outline, &ras );
       if ( !ras.invalid )
         gray_record_cell( RAS_VAR );
-    }
-    else
-    {
+    } catch (const RasterMemoryOverflow &) {
       error = ErrRaster_Memory_Overflow;
     }
 
@@ -1932,7 +1925,7 @@ QT_FT_END_STMNT
   static int
   gray_raster_new( QT_FT_Raster*  araster )
   {
-    *araster = malloc(sizeof(TRaster));
+    *araster = static_cast<TRaster *>(malloc(sizeof(TRaster)));
     if (!*araster) {
         *araster = 0;
         return ErrRaster_Memory_Overflow;
diff --git a/src/gui/painting/qt_attribution.json b/src/gui/painting/qt_attribution.json
index 7b16e8c211..38f03b73d8 100644
--- a/src/gui/painting/qt_attribution.json
+++ b/src/gui/painting/qt_attribution.json
@@ -4,7 +4,7 @@
         "Name": "Anti-aliasing rasterizer from FreeType 2",
         "QDocModule": "qtgui",
         "QtUsage": "Used in Qt GUI.",
-        "Path": "qgrayraster.c",
+        "Path": "qgrayraster.cpp",
 
         "Description": "FreeType is a freely available software library to render fonts.",
         "Homepage": "http://www.freetype.org",


