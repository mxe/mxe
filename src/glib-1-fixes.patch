This file is part of MXE.
See index.html for further information.

Contains ad hoc patches for cross building.

From 55d5dab8f12c55064b48da8a4a42bfe8fa97f8f9 Mon Sep 17 00:00:00 2001
From: MXE
Date: Thu, 23 Sep 2010 21:41:51 +0200
Subject: [PATCH 1/8] optional gettext


diff -ur a/configure.ac b/configure.ac
--- a/configure.ac	2013-06-10 00:53:13.000000000 +0200
+++ b/configure.ac	2013-06-29 05:15:59.920660258 +0200
@@ -483,8 +483,8 @@
 GLIB_GNU_GETTEXT
 
 if test "$gt_cv_have_gettext" != "yes" ; then
-  AC_MSG_ERROR([
-*** You must have either have gettext support in your C library, or use the 
+  AC_MSG_WARN([
+*** You should have either have gettext support in your C library, or use the 
 *** GNU gettext library. (http://www.gnu.org/software/gettext/gettext.html
 ])
 fi
diff -ur a/glib/gi18n.h b/glib/gi18n.h
--- a/glib/gi18n.h	2011-08-16 02:51:30.000000000 +0200
+++ b/glib/gi18n.h	2013-06-29 05:17:17.620663625 +0200
@@ -22,7 +22,12 @@
 
 #include <glib.h>
 
+#ifdef ENABLE_NLS
 #include <libintl.h>
+#else
+#define gettext(String) (String)
+#endif
+
 #include <string.h>
 
 #define  _(String) gettext (String)


From 4dee17aeb7c45a84a44e3fe2dcca4d8bfd1916a3 Mon Sep 17 00:00:00 2001
From: MXE
Date: Thu, 23 Sep 2010 21:42:46 +0200
Subject: [PATCH 2/8] fix tool paths


diff -ur a/glib-2.0.pc.in b/glib-2.0.pc.in
--- a/glib-2.0.pc.in	2012-03-12 01:42:41.000000000 +0100
+++ b/glib-2.0.pc.in	2013-06-29 05:18:02.624665578 +0200
@@ -3,9 +3,9 @@
 libdir=@libdir@
 includedir=@includedir@
 
-glib_genmarshal=glib-genmarshal
-gobject_query=gobject-query
-glib_mkenums=glib-mkenums
+glib_genmarshal=@bindir@/glib-genmarshal
+gobject_query=@bindir@/gobject-query
+glib_mkenums=@bindir@/glib-mkenums
 
 Name: GLib
 Description: C Utility Library


From 981260cfec055fbd58986d9e1b7ef27cdc036e30 Mon Sep 17 00:00:00 2001
From: MXE
Date: Fri, 15 Jun 2012 15:25:01 +0200
Subject: [PATCH 3/8] Avoid DllMain symbol conflict when linking statically


diff -ur a/gio/giomodule.c b/gio/giomodule.c
--- a/gio/giomodule.c	2013-06-03 01:20:49.000000000 +0200
+++ b/gio/giomodule.c	2013-06-29 05:19:55.560670478 +0200
@@ -900,14 +900,12 @@
 
 static HMODULE gio_dll = NULL;
 
-#ifdef DLL_EXPORT
-
-BOOL WINAPI DllMain (HINSTANCE hinstDLL,
+BOOL WINAPI gio_DllMain (HINSTANCE hinstDLL,
                      DWORD     fdwReason,
                      LPVOID    lpvReserved);
 
 BOOL WINAPI
-DllMain (HINSTANCE hinstDLL,
+gio_DllMain (HINSTANCE hinstDLL,
 	 DWORD     fdwReason,
 	 LPVOID    lpvReserved)
 {
@@ -917,8 +915,6 @@
   return TRUE;
 }
 
-#endif
-
 void *
 _g_io_win32_get_module (void)
 {
diff -ur a/glib/glib-init.c b/glib/glib-init.c
--- a/glib/glib-init.c	2013-06-10 00:03:17.000000000 +0200
+++ b/glib/glib-init.c	2013-06-29 05:20:43.480672556 +0200
@@ -223,14 +223,14 @@
 
 #if defined (G_OS_WIN32)
 
-BOOL WINAPI DllMain (HINSTANCE hinstDLL,
+BOOL WINAPI glib_DllMain (HINSTANCE hinstDLL,
                      DWORD     fdwReason,
                      LPVOID    lpvReserved);
 
 HMODULE glib_dll;
 
 BOOL WINAPI
-DllMain (HINSTANCE hinstDLL,
+glib_DllMain (HINSTANCE hinstDLL,
          DWORD     fdwReason,
          LPVOID    lpvReserved)
 {


From 1b51f3ef3e38d5db3c15cde0fe4429dab1f7a6d0 Mon Sep 17 00:00:00 2001
From: MXE
Date: Fri, 15 Jun 2012 15:27:22 +0200
Subject: [PATCH 4/8] Allow building without inotify support


diff -ur a/configure.ac b/configure.ac
--- a/configure.ac	2013-06-10 00:53:13.000000000 +0200
+++ b/configure.ac	2013-06-29 05:23:45.264680443 +0200
@@ -1726,11 +1726,17 @@
 dnl ** Check for inotify (GIO) **
 dnl *****************************
 inotify_support=no
-AC_CHECK_HEADERS([sys/inotify.h],
-[
+AC_ARG_ENABLE(inotify,
+              AC_HELP_STRING([--disable-inotify],
+                             [build without inotify support]))
+
+if test "x$enable_inotify" != "xno"; then
+  AC_CHECK_HEADERS([sys/inotify.h],
+  [
 	inotify_support=yes
 	AC_CHECK_FUNCS(inotify_init1)
-])
+  ])
+fi
 
 AM_CONDITIONAL(HAVE_INOTIFY, [test "$inotify_support" = "yes"])
 


From 5ec5d101cb75c096f39228da85d2caba52b9002f Mon Sep 17 00:00:00 2001
From: MXE
Date: Fri, 15 Jun 2012 15:28:14 +0200
Subject: [PATCH 5/8] Make sure STDC_HEADERS is set for AC_CHECK_ALIGNOF.
 Backported from upstream


diff -ur a/configure.ac b/configure.ac
--- a/configure.ac	2013-06-10 00:53:13.000000000 +0200
+++ b/configure.ac	2013-06-29 05:24:29.720682366 +0200
@@ -456,6 +456,8 @@
 
 AC_MSG_RESULT($enable_iconv_cache)
 
+# Make sure STDC_HEADERS is set for AC_CHECK_ALIGNOF
+AS_IF([false], [AC_CHECK_HEADER([stdint.h])])
 
 dnl
 dnl zlib support


From d5c7bf3b57ced0c6dfb416cf7b439fba210d2a8b Mon Sep 17 00:00:00 2001
From: MXE
Date: Fri, 15 Jun 2012 15:29:06 +0200
Subject: [PATCH 6/8] Link with dnsapi


diff -ur a/gio-2.0.pc.in b/gio-2.0.pc.in
--- a/gio-2.0.pc.in	2013-01-20 20:48:44.000000000 +0100
+++ b/gio-2.0.pc.in	2013-06-29 05:25:16.328684390 +0200
@@ -13,6 +13,6 @@
 Version: @VERSION@
 Requires: glib-2.0 gobject-2.0
 Requires.private: gmodule-no-export-2.0
-Libs: -L${libdir} -lgio-2.0
+Libs: -L${libdir} -lgio-2.0 -ldnsapi -liphlpapi
 Libs.private: @ZLIB_LIBS@ @NETWORK_LIBS@
 Cflags:



From e0338b4fdd95e8273c84ba1daeea660c589d152a Mon Sep 17 00:00:00 2001
From: MXE
Date: Fri, 15 Jun 2012 15:29:38 +0200
Subject: [PATCH 7/8] Ensure globals are initialized even when DllMain is not
 being run


diff -ur a/glib/gmain.c b/glib/gmain.c
--- a/glib/gmain.c	2013-06-10 00:03:18.000000000 +0200
+++ b/glib/gmain.c	2013-06-29 05:33:10.568704963 +0200
@@ -2490,12 +2490,15 @@
 #ifdef G_OS_WIN32
 static ULONGLONG (*g_GetTickCount64) (void) = NULL;
 static guint32 g_win32_tick_epoch = 0;
+static gboolean g_win32_clock_is_initialized;
 
 void
 g_clock_win32_init (void)
 {
   HMODULE kernel32;
 
+  g_win32_clock_is_initialized = TRUE;
+
   g_GetTickCount64 = NULL;
   kernel32 = GetModuleHandle ("KERNEL32.DLL");
   if (kernel32 != NULL)
@@ -2614,6 +2617,9 @@
    *    timeBeginPeriod() to increase it as much as they want
    */
 
+  if (!g_win32_clock_is_initialized)
+    g_clock_win32_init ();
+
   if (g_GetTickCount64 != NULL)
     {
       guint32 ticks_as_32bit;
diff -ur a/glib/gthread-win32.c b/glib/gthread-win32.c
--- a/glib/gthread-win32.c	2013-06-03 01:20:49.000000000 +0200
+++ b/glib/gthread-win32.c	2013-06-29 05:49:13.580746730 +0200
@@ -118,18 +118,28 @@
   void     (__stdcall * WakeConditionVariable)       (gpointer cond);
 } GThreadImplVtable;
 
+/* Needed for static builds where DllMain initializer doesn't get called */
+static gboolean g_threads_is_initialized;
+G_GNUC_INTERNAL void g_thread_win32_init (void);
+
 static GThreadImplVtable g_thread_impl_vtable;
 
 /* {{{1 GMutex */
 void
 g_mutex_init (GMutex *mutex)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_thread_impl_vtable.InitializeSRWLock (mutex);
 }
 
 void
 g_mutex_clear (GMutex *mutex)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   if (g_thread_impl_vtable.DeleteSRWLock != NULL)
     g_thread_impl_vtable.DeleteSRWLock (mutex);
 }
@@ -137,18 +147,27 @@
 void
 g_mutex_lock (GMutex *mutex)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_thread_impl_vtable.AcquireSRWLockExclusive (mutex);
 }
 
 gboolean
 g_mutex_trylock (GMutex *mutex)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   return g_thread_impl_vtable.TryAcquireSRWLockExclusive (mutex);
 }
 
 void
 g_mutex_unlock (GMutex *mutex)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_thread_impl_vtable.ReleaseSRWLockExclusive (mutex);
 }
 
@@ -159,6 +178,9 @@
 {
   CRITICAL_SECTION *cs;
 
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   cs = g_slice_new (CRITICAL_SECTION);
   InitializeCriticalSection (cs);
 
@@ -169,6 +191,10 @@
 g_rec_mutex_impl_free (CRITICAL_SECTION *cs)
 {
   DeleteCriticalSection (cs);
+
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_slice_free (CRITICAL_SECTION, cs);
 }
 
@@ -177,6 +203,9 @@
 {
   CRITICAL_SECTION *impl = mutex->p;
 
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   if G_UNLIKELY (mutex->p == NULL)
     {
       impl = g_rec_mutex_impl_new ();
@@ -191,30 +220,45 @@
 void
 g_rec_mutex_init (GRecMutex *mutex)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   mutex->p = g_rec_mutex_impl_new ();
 }
 
 void
 g_rec_mutex_clear (GRecMutex *mutex)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_rec_mutex_impl_free (mutex->p);
 }
 
 void
 g_rec_mutex_lock (GRecMutex *mutex)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   EnterCriticalSection (g_rec_mutex_get_impl (mutex));
 }
 
 void
 g_rec_mutex_unlock (GRecMutex *mutex)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   LeaveCriticalSection (mutex->p);
 }
 
 gboolean
 g_rec_mutex_trylock (GRecMutex *mutex)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   return TryEnterCriticalSection (g_rec_mutex_get_impl (mutex));
 }
 
@@ -223,12 +267,18 @@
 void
 g_rw_lock_init (GRWLock *lock)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_thread_impl_vtable.InitializeSRWLock (lock);
 }
 
 void
 g_rw_lock_clear (GRWLock *lock)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   if (g_thread_impl_vtable.DeleteSRWLock != NULL)
     g_thread_impl_vtable.DeleteSRWLock (lock);
 }
@@ -236,36 +286,54 @@
 void
 g_rw_lock_writer_lock (GRWLock *lock)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_thread_impl_vtable.AcquireSRWLockExclusive (lock);
 }
 
 gboolean
 g_rw_lock_writer_trylock (GRWLock *lock)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   return g_thread_impl_vtable.TryAcquireSRWLockExclusive (lock);
 }
 
 void
 g_rw_lock_writer_unlock (GRWLock *lock)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_thread_impl_vtable.ReleaseSRWLockExclusive (lock);
 }
 
 void
 g_rw_lock_reader_lock (GRWLock *lock)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_thread_impl_vtable.AcquireSRWLockShared (lock);
 }
 
 gboolean
 g_rw_lock_reader_trylock (GRWLock *lock)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   return g_thread_impl_vtable.TryAcquireSRWLockShared (lock);
 }
 
 void
 g_rw_lock_reader_unlock (GRWLock *lock)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_thread_impl_vtable.ReleaseSRWLockShared (lock);
 }
 
@@ -273,12 +341,18 @@
 void
 g_cond_init (GCond *cond)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_thread_impl_vtable.InitializeConditionVariable (cond);
 }
 
 void
 g_cond_clear (GCond *cond)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   if (g_thread_impl_vtable.DeleteConditionVariable)
     g_thread_impl_vtable.DeleteConditionVariable (cond);
 }
@@ -286,12 +360,18 @@
 void
 g_cond_signal (GCond *cond)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_thread_impl_vtable.WakeConditionVariable (cond);
 }
 
 void
 g_cond_broadcast (GCond *cond)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_thread_impl_vtable.WakeAllConditionVariable (cond);
 }
 
@@ -299,6 +379,9 @@
 g_cond_wait (GCond  *cond,
              GMutex *entered_mutex)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_thread_impl_vtable.SleepConditionVariableSRW (cond, entered_mutex, INFINITE, 0);
 }
 
@@ -309,6 +392,9 @@
 {
   gint64 span;
 
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   span = end_time - g_get_monotonic_time ();
 
   if G_UNLIKELY (span < 0)
@@ -341,6 +427,9 @@
 
   if G_UNLIKELY (impl == 0)
     {
+      if (!g_threads_is_initialized)
+        g_thread_win32_init ();
+
       EnterCriticalSection (&g_private_lock);
       impl = (DWORD) key->p;
       if (impl == 0)
@@ -434,6 +523,9 @@
 {
   GThreadWin32 *wt = (GThreadWin32 *) thread;
 
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   win32_check_for_error (CloseHandle (wt->handle));
   g_slice_free (GThreadWin32, wt);
 }
@@ -441,6 +533,9 @@
 void
 g_system_thread_exit (void)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   _endthreadex (0);
 }
 
@@ -449,6 +544,9 @@
 {
   GThreadWin32 *self = data;
 
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   self->proxy (self);
 
   g_system_thread_exit ();
@@ -466,6 +564,9 @@
   GThreadWin32 *thread;
   guint ignore;
 
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   thread = g_slice_new0 (GThreadWin32);
   thread->proxy = func;
 
@@ -495,6 +596,9 @@
 {
   GThreadWin32 *wt = (GThreadWin32 *) thread;
 
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   win32_check_for_error (WAIT_FAILED != WaitForSingleObject (wt->handle, INFINITE));
 }
 
@@ -986,6 +1090,8 @@
 void
 g_thread_win32_init (void)
 {
+  g_threads_is_initialized = TRUE;
+
   if (!g_thread_lookup_native_funcs ())
     g_thread_xp_init ();
 


From ce0f7354ac995f3b21cccabec880413d37f02fb6 Mon Sep 17 00:00:00 2001
From: MXE
Date: Mon, 18 Jun 2012 16:02:12 +0200
Subject: [PATCH 8/8] kill docs and gtk-doc dependence (mxe-specific)


diff -urN a/autogen.sh b/autogen.sh
--- a/autogen.sh	2013-05-07 20:26:07.000000000 +0200
+++ b/autogen.sh	2013-11-09 06:17:50.014630402 +0100
@@ -7,18 +7,6 @@
 olddir=`pwd`
 cd "$srcdir"
 
-GTKDOCIZE=$(which gtkdocize 2>/dev/null)
-if test -z $GTKDOCIZE; then
-        echo "You don't have gtk-doc installed, and thus won't be able to generate the documentation."
-        rm -f gtk-doc.make
-        cat > gtk-doc.make <<EOF
-EXTRA_DIST =
-CLEANFILES =
-EOF
-else
-        gtkdocize || exit $?
-fi
-
 AUTORECONF=`which autoreconf`
 if test -z $AUTORECONF; then
         echo "*** No autoreconf found, please install it ***"
diff -urN a/configure.ac b/configure.ac
--- a/configure.ac	2013-10-15 21:14:26.000000000 +0200
+++ b/configure.ac	2013-11-09 06:18:17.274631022 +0100
@@ -2710,13 +2710,6 @@
 dnl **************************
 dnl *** Checks for gtk-doc ***
 dnl **************************
-# gtkdocize greps for ^GTK_DOC_CHECK and parses it, so you need to have
-# it on it's own line.
-m4_ifdef([GTK_DOC_CHECK], [
-GTK_DOC_CHECK([1.15], [--flavour no-tmpl])
-],[
-AM_CONDITIONAL([ENABLE_GTK_DOC],[false])
-])
 
 AC_ARG_ENABLE(man,
               [AS_HELP_STRING([--enable-man],
diff -urN a/docs/Makefile.am b/docs/Makefile.am
--- a/docs/Makefile.am	2013-08-08 12:00:40.000000000 +0200
+++ b/docs/Makefile.am	1970-01-01 01:00:00.000000000 +0100
@@ -1,12 +0,0 @@
-## Process this file with automake to produce Makefile.in
-
-SUBDIRS = reference
-
-EXTRA_DIST = debugging.txt macros.txt
-
-files:
-	@files=`ls $(DISTFILES) 2> /dev/null `; for p in $$files; do \
-	  echo $$p; \
-	done
-
-.PHONY: test test-report perf-report full-report
diff -urN a/docs/reference/gio/gdbus-object-manager-example/Makefile.am b/docs/reference/gio/gdbus-object-manager-example/Makefile.am
--- a/docs/reference/gio/gdbus-object-manager-example/Makefile.am	2013-08-08 12:00:40.000000000 +0200
+++ b/docs/reference/gio/gdbus-object-manager-example/Makefile.am	1970-01-01 01:00:00.000000000 +0100
@@ -1,67 +0,0 @@
-NULL =
-
-# The name of the module.
-DOC_MODULE=gdbus-object-manager-example
-
-# The top-level SGML file.
-DOC_MAIN_SGML_FILE=gdbus-object-manager-example-docs.xml
-
-# Extra options to supply to gtkdoc-scan
-SCAN_OPTIONS=--deprecated-guards="G_DISABLE_DEPRECATED"
-
-# The directory containing the source code. Relative to $(srcdir)
-DOC_SOURCE_DIR=$(top_builddir)/gio/tests/gdbus-object-manager-example
-
-HFILE_GLOB=$(top_builddir)/gio/tests/gdbus-object-manager-example/*.h
-CFILE_GLOB=$(top_builddir)/gio/tests/gdbus-object-manager-example/*.c
-
-# Headers to ignore
-IGNORE_HFILES =				\
-	$(NULL)
-
-# CFLAGS and LDFLAGS for compiling scan program. Only needed
-# if $(DOC_MODULE).types is non-empty.
-AM_CPPFLAGS = 				\
-	$(gio_INCLUDES)			\
-	$(GLIB_DEBUG_FLAGS)
-
-GTKDOC_LIBS = 						\
-	$(top_builddir)/glib/libglib-2.0.la		\
-	$(top_builddir)/gobject/libgobject-2.0.la	\
-	$(top_builddir)/gmodule/libgmodule-2.0.la	\
-	$(top_builddir)/gio/libgio-2.0.la		\
-	$(top_builddir)/gio/tests/gdbus-object-manager-example/libgdbus-example-objectmanager.la \
-	$(NULL)
-
-# Extra options to supply to gtkdoc-mkdb
-MKDB_OPTIONS = --output-format=xml --sgml-mode --name-space=g \
-	$(NULL)
-
-# Images to copy into HTML directory
-HTML_IMAGES =			\
-	$(NULL)
-
-content_files =			\
-	$(NULL)
-
-expand_content_files =		\
-	$(NULL)
-
-extra_files =			\
-	$(NULL)
-
-include $(top_srcdir)/gtk-doc.make
-
-EXTRA_DIST +=			\
-	$(NULL)
-
-MAINTAINERCLEANFILES = $(BUILT_SOURCES)
-
-dist-hook-local: all-local
-
-gdbus-object-manager-example-docs-clean: clean
-	cd $(srcdir) && rm -rf xml html
-
-# Nuke installed docs (don't know how to avoid installing them)
-install-data-hook :
-	rm -rf $(DESTDIR)$(datadir)/gtk-doc/html/gdbus-object-manager-example
diff -urN a/docs/reference/gio/Makefile.am b/docs/reference/gio/Makefile.am
--- a/docs/reference/gio/Makefile.am	2013-08-08 12:00:40.000000000 +0200
+++ b/docs/reference/gio/Makefile.am	1970-01-01 01:00:00.000000000 +0100
@@ -1,178 +0,0 @@
-NULL =
-
-SUBDIRS = gdbus-object-manager-example
-
-# The name of the module.
-DOC_MODULE=gio
-
-# The top-level SGML file.
-DOC_MAIN_SGML_FILE=gio-docs.xml
-
-# Extra options to supply to gtkdoc-scan
-SCAN_OPTIONS=--deprecated-guards="G_DISABLE_DEPRECATED" \
-             --ignore-decorators="G_GNUC_WARN_UNUSED_RESULT"
-
-# The directory containing the source code. Relative to $(srcdir)
-DOC_SOURCE_DIR=$(top_srcdir)/gio
-
-BUILT_HFILES=gioenumtypes.h
-HFILE_GLOB=$(top_srcdir)/gio/*.h
-CFILE_GLOB=$(top_srcdir)/gio/*.c
-
-IGNORE_HFILES = \
-	fam				\
-	fen				\
-	gdbus-2.0			\
-	gvdb				\
-	inotify				\
-	libasyncns			\
-	tests				\
-	win32				\
-	xdgmime				\
-	gapplicationimpl.h		\
-	gasynchelper.h			\
-	gcontenttypeprivate.h		\
-	gdbusauth.h			\
-	gdbusauthmechanismanon.h	\
-	gdbusauthmechanismexternal.h	\
-	gdbusauthmechanism.h		\
-	gdbusauthmechanismsha1.h	\
-	gdbusprivate.h			\
-	gdelayedsettingsbackend.h	\
-	gdummyfile.h			\
-	gdummyproxyresolver.h		\
-	gdummytlsbackend.h		\
-	gfileattribute-priv.h		\
-	gfileinfo-priv.h		\
-	giomodule-priv.h		\
-	glocaldirectorymonitor.h	\
-	glocalfileenumerator.h		\
-	glocalfile.h			\
-	glocalfileinfo.h		\
-	glocalfileinputstream.h		\
-	glocalfileiostream.h		\
-	glocalfilemonitor.h		\
-	glocalfileoutputstream.h	\
-	glocalvfs.h			\
-	gmountprivate.h			\
-	gnativevolumemonitor.h		\
-	gnetworkingprivate.h		\
-	gnetworkmonitorbase.h		\
-	gnetworkmonitornetlink.h	\
-	gpollfilemonitor.h		\
-	gregistrysettingsbackend.h	\
-	gsettingsbackendinternal.h	\
-	gsettings-mapping.h		\
-	gsettingsschema-internal.h	\
-	gsocketinputstream.h		\
-	gsocketoutputstream.h		\
-	gsocks4aproxy.h			\
-	gsocks4proxy.h			\
-	gsocks5proxy.h			\
-	gthreadedresolver.h		\
-	gunionvolumemonitor.h		\
-	gunixmount.h			\
-	gunixresolver.h			\
-	gunixvolume.h			\
-	gunixvolumemonitor.h		\
-	gwin32appinfo.h			\
-	gwin32mount.h			\
-	gwin32resolver.h		\
-	gwin32volumemonitor.h
-
-
-# CFLAGS and LDFLAGS for compiling scan program. Only needed
-# if $(DOC_MODULE).types is non-empty.
-AM_CPPFLAGS = 				\
-	$(gio_INCLUDES)			\
-	$(GLIB_DEBUG_FLAGS)
-
-GTKDOC_LIBS = \
-	$(top_builddir)/glib/libglib-2.0.la		\
-	$(top_builddir)/gobject/libgobject-2.0.la	\
-	$(top_builddir)/gmodule/libgmodule-2.0.la	\
-	$(top_builddir)/gio/libgio-2.0.la		\
-	$(NULL)
-
-# Extra options to supply to gtkdoc-mkdb
-MKDB_OPTIONS = --output-format=xml --sgml-mode --name-space=g \
-	--ignore-files='libasyncns tests'
-
-# Images to copy into HTML directory
-HTML_IMAGES =			\
-	gvfs-overview.png	\
-	menu-example.png	\
-	menu-model.png
-
-content_files =			\
-	version.xml		\
-	overview.xml		\
-	migrating-posix.xml	\
-	migrating-gnome-vfs.xml	\
-	migrating-gconf.xml	\
-	migrating-gdbus.xml	\
-	gio-querymodules.xml	\
-	glib-compile-schemas.xml\
-	glib-compile-resources.xml	\
-	gsettings.xml		\
-	gresource.xml		\
-	gdbus.xml		\
-	gdbus-codegen.xml	\
-	$(NULL)
-
-expand_content_files =		\
-	overview.xml		\
-	migrating-posix.xml	\
-	migrating-gnome-vfs.xml	\
-	migrating-gconf.xml	\
-	migrating-gdbus.xml	\
-	gdbus-codegen.xml	\
-	$(NULL)
-
-extra_files =			\
-	version.xml.in		\
-	gvfs-overview.odg
-
-# Extra options to supply to gtkdoc-fixref
-FIXXREF_OPTIONS=--extra-dir=$(srcdir)/../glib/html --extra-dir=$(srcdir)/../gobject/html
-
-include $(top_srcdir)/gtk-doc.make
-
-EXTRA_DIST +=			\
-	version.xml.in
-
-man_MANS =
-
-if ENABLE_MAN
-
-man_MANS +=			\
-	gio-querymodules.1	\
-	glib-compile-schemas.1	\
-	glib-compile-resources.1	\
-	gsettings.1		\
-	gresource.1		\
-	gdbus.1			\
-	gdbus-codegen.1
-
-XSLTPROC_FLAGS = \
-        --nonet \
-        --stringparam man.output.quietly 1 \
-        --stringparam funcsynopsis.style ansi \
-        --stringparam man.th.extra1.suppress 1 \
-        --stringparam man.authors.section.enabled 0 \
-        --stringparam man.copyright.section.enabled 0
-
-.xml.1:
-	$(AM_V_GEN) $(XSLTPROC) $(XSLTPROC_FLAGS) http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl $<
-
-endif
-
-CLEANFILES ?=
-CLEANFILES += $(man_MANS)
-
-EXTRA_DIST += $(man_MANS)
-
-dist-hook-local: all-local
-
-gio-docs-clean: clean
-	cd $(srcdir) && rm -rf xml html
diff -urN a/docs/reference/glib/Makefile.am b/docs/reference/glib/Makefile.am
--- a/docs/reference/glib/Makefile.am	2013-08-08 12:00:40.000000000 +0200
+++ b/docs/reference/glib/Makefile.am	1970-01-01 01:00:00.000000000 +0100
@@ -1,127 +0,0 @@
-## Process this file with automake to produce Makefile.in
-
-AUTOMAKE_OPTIONS = 1.6
-
-# The name of the module.
-DOC_MODULE=glib
-
-# The top-level SGML file.
-DOC_MAIN_SGML_FILE=glib-docs.xml
-
-# The directory containing the source code. Relative to $(srcdir)
-DOC_SOURCE_DIR=$(top_srcdir)/glib $(top_srcdir)/gmodule
-
-# Extra options to supply to gtkdoc-scan
-SCAN_OPTIONS=--deprecated-guards="G_DISABLE_DEPRECATED" --ignore-decorators="GLIB_VAR|G_GNUC_WARN_UNUSED_RESULT"
-
-# Extra options to supply to gtkdoc-mkdb
-MKDB_OPTIONS=--sgml-mode --output-format=xml --name-space=g
-
-# Used for dependencies
-HFILE_GLOB=$(top_srcdir)/glib/*.h $(top_srcdir)/gmodule/*.h
-CFILE_GLOB=$(top_srcdir)/glib/*.c $(top_srcdir)/gmodule/*.c
-
-# Ignore some private headers
-IGNORE_HFILES = \
-	gallocator.h		\
-	gdatasetprivate.h	\
-	glibintl.h		\
-	gbsearcharray.h		\
-	glib-private.h		\
-	gmoduleconf.h		\
-	gthreadprivate.h	\
-	gunibreak.h		\
-	gunicomp.h		\
-	gunidecomp.h		\
-	gunichartables.h	\
-	glib_probes.h		\
-	glib_trace.h		\
-	libcharset.h		\
-	gdebug.h		\
-	gprintfint.h		\
-	gmirroringtable.h	\
-	gscripttable.h		\
-	glib-mirroring-tab	\
-	gnulib			\
-	pcre			\
-	update-pcre		\
-	gbytesprivate.h		\
-	gvariant-internal.h	\
-	gvariant-serialiser.h	\
-	gvariant-core.h		\
-	gvarianttypeinfo.h	\
-	gwakeup.h
-
-# Images to copy into HTML directory
-HTML_IMAGES =  				\
-	file-name-encodings.png		\
-	mainloop-states.gif
-
-# Extra SGML files that are included by $(DOC_MAIN_SGML_FILE)
-content_files =				\
-	cross.xml			\
-	running.xml			\
-	building.xml			\
-	changes.xml			\
-	compiling.xml			\
-	programming.xml			\
-	resources.xml			\
-	regex-syntax.xml		\
-	version.xml			\
-	glib-gettextize.xml		\
-	gtester.xml			\
-	gtester-report.xml		\
-	gvariant-varargs.xml		\
-	gvariant-text.xml
-
-expand_content_files = 			\
-	compiling.xml
-
-# Extra options to supply to gtkdoc-fixref
-FIXXREF_OPTIONS=--extra-dir=$(srcdir)/../gobject/html --extra-dir=$(srcdir)/../gio/html
-
-# include common portion ...
-include $(top_srcdir)/gtk-doc.make
-
-# Other files to distribute
-EXTRA_DIST +=				\
-	file-name-encodings.png		\
-	file-name-encodings.sxd		\
-	mainloop-states.fig		\
-	mainloop-states.png		\
-	mainloop-states.eps		\
-	version.xml.in
-
-########################################################################
-
-man_MANS =
-
-if ENABLE_MAN
-
-man_MANS += \
-	glib-gettextize.1 	\
-	gtester.1		\
-	gtester-report.1
-
-XSLTPROC_FLAGS = \
-        --nonet \
-        --stringparam man.output.quietly 1 \
-        --stringparam funcsynopsis.style ansi \
-        --stringparam man.th.extra1.suppress 1 \
-        --stringparam man.authors.section.enabled 0 \
-        --stringparam man.copyright.section.enabled 0
-
-.xml.1:
-	$(AM_V_GEN) $(XSLTPROC) $(XSLTPROC_FLAGS) http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl $<
-
-endif
-
-CLEANFILES ?=
-CLEANFILES += $(man_MANS)
-
-EXTRA_DIST += $(man_MANS)
-
-dist-hook-local: all-local
-
-glib-docs-clean: clean
-	cd $(srcdir) && rm -rf xml html
diff -urN a/docs/reference/gobject/Makefile.am b/docs/reference/gobject/Makefile.am
--- a/docs/reference/gobject/Makefile.am	2013-08-08 12:00:40.000000000 +0200
+++ b/docs/reference/gobject/Makefile.am	1970-01-01 01:00:00.000000000 +0100
@@ -1,103 +0,0 @@
-## Process this file with automake to produce Makefile.in
-
-AUTOMAKE_OPTIONS = 1.6
-
-# The name of the module.
-DOC_MODULE=gobject
-
-# The top-level SGML file.
-DOC_MAIN_SGML_FILE=gobject-docs.xml
-
-# The directory containing the source code. Relative to $(srcdir)
-DOC_SOURCE_DIR=$(top_srcdir)/gobject
-
-# Extra options to supply to gtkdoc-scan
-SCAN_OPTIONS=--deprecated-guards="G_DISABLE_DEPRECATED" \
-             --ignore-decorators="G_GNUC_INTERNAL|G_GNUC_WARN_UNUSED_RESULT"
-
-# Extra options to supply to gtkdoc-mkdb
-MKDB_OPTIONS=--sgml-mode --output-format=xml --name-space=g
-
-# Used for dependencies
-HFILE_GLOB=$(top_srcdir)/gobject/*.h
-CFILE_GLOB=$(top_srcdir)/gobject/*.c
-
-# Headers to ignore
-IGNORE_HFILES = \
-	tests			\
-	gobject_trace.h		\
-	gtype-private.h		\
-	gatomicarray.h
-
-
-# CFLAGS and LDFLAGS for compiling scan program. Only needed
-# if $(DOC_MODULE).types is non-empty.
-AM_CPPFLAGS = 				\
-	-I$(srcdir) 			\
-	$(gobject_INCLUDES) 		\
-	$(GLIB_DEBUG_FLAGS)
-
-GTKDOC_LIBS = 					\
-	$(top_builddir)/glib/libglib-2.0.la	\
-	$(top_builddir)/gobject/libgobject-2.0.la
-
-# Images to copy into HTML directory
-HTML_IMAGES =  \
-	images/glue.png
-
-# Extra SGML files that are included by $(DOC_MAIN_SGML_FILE)
-content_files = version.xml 		\
-		glib-mkenums.xml 	\
-		glib-genmarshal.xml	\
-		gobject-query.xml \
-		tut_gobject.xml \
-		tut_gsignal.xml \
-		tut_gtype.xml \
-		tut_howto.xml \
-		tut_intro.xml \
-		tut_tools.xml
-
-# Extra options to supply to gtkdoc-fixref
-FIXXREF_OPTIONS=--extra-dir=$(srcdir)/../glib/html
-
-include $(top_srcdir)/gtk-doc.make
-
-# Other files to distribute
-EXTRA_DIST += 		\
-	gobject.cI	\
-	version.xml.in
-
-########################################################################
-
-man_MANS =
-
-if ENABLE_MAN
-
-man_MANS += 			\
-	glib-mkenums.1 		\
-	glib-genmarshal.1 	\
-	gobject-query.1
-
-
-XSLTPROC_FLAGS = \
-        --nonet \
-        --stringparam man.output.quietly 1 \
-        --stringparam funcsynopsis.style ansi \
-        --stringparam man.th.extra1.suppress 1 \
-        --stringparam man.authors.section.enabled 0 \
-        --stringparam man.copyright.section.enabled 0
-
-.xml.1:
-	$(AM_V_GEN) $(XSLTPROC) $(XSLTPROC_FLAGS) http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl $<
-
-endif
-
-CLEANFILES ?=
-CLEANFILES += $(man_MANS)
-
-EXTRA_DIST += $(man_MANS)
-
-dist-hook-local: all-local
-
-gobject-docs-clean: clean
-	cd $(srcdir) && rm -rf xml html
diff -urN a/docs/reference/Makefile.am b/docs/reference/Makefile.am
--- a/docs/reference/Makefile.am	2013-08-08 12:00:40.000000000 +0200
+++ b/docs/reference/Makefile.am	1970-01-01 01:00:00.000000000 +0100
@@ -1 +0,0 @@
-SUBDIRS = glib gobject gio
diff -urN a/gio/tests/gdbus-object-manager-example/Makefile.am b/gio/tests/gdbus-object-manager-example/Makefile.am
--- a/gio/tests/gdbus-object-manager-example/Makefile.am	2013-08-08 12:00:40.000000000 +0200
+++ b/gio/tests/gdbus-object-manager-example/Makefile.am	2013-11-09 06:20:32.858634115 +0100
@@ -25,12 +25,6 @@
 
 test_ltlibraries = libgdbus-example-objectmanager.la
 
-if ENABLE_GTK_DOC
-# The docs pull these in, so we need them even if not doing 'make check'
-BUILT_SOURCES += $(GDBUS_GENERATED)
-noinst_LTLIBRARIES += libgdbus-example-objectmanager.la
-endif
-
 nodist_libgdbus_example_objectmanager_la_SOURCES = \
 	gdbus-example-objectmanager-generated.h		\
 	gdbus-example-objectmanager-generated.c
diff -urN a/Makefile.am b/Makefile.am
--- a/Makefile.am	2013-09-17 20:47:14.000000000 +0200
+++ b/Makefile.am	2013-11-09 06:16:23.310628423 +0100
@@ -6,7 +6,7 @@
 
 ACLOCAL_AMFLAGS = -I m4macros ${ACLOCAL_FLAGS}
 
-SUBDIRS = . m4macros glib gmodule gthread gobject gio po docs tests
+SUBDIRS = . m4macros glib gmodule gthread gobject gio po tests
 DIST_SUBDIRS = $(SUBDIRS) build
 
 bin_SCRIPTS = glib-gettextize
@@ -61,7 +61,6 @@
 	gio-unix-2.0.pc.in	\
 	gio-windows-2.0.pc.in	\
 	check-abis.sh		\
-	gtk-doc.make		\
 	$(NULL)
 
 
