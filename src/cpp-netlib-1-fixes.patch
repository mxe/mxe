This file is part of MXE. See LICENSE.md for licensing information.

Contains ad hoc patches for cross building.

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: "fix@me" <fix@me>
Date: Mon, 30 Nov 2015 20:34:28 +1100
Subject: [PATCH 1/2] fix dll installation and ws2_32 linking errors


diff --git a/libs/network/src/CMakeLists.txt b/libs/network/src/CMakeLists.txt
index 1111111..2222222 100644
--- a/libs/network/src/CMakeLists.txt
+++ b/libs/network/src/CMakeLists.txt
@@ -22,6 +22,7 @@ install(TARGETS cppnetlib-uri
     EXPORT cppnetlibTargets
     PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_FULL_INCLUDEDIR}
     LIBRARY DESTINATION ${CMAKE_INSTALL_FULL_LIBDIR}
+    RUNTIME DESTINATION ${CMAKE_INSTALL_FULL_BINDIR}
     ARCHIVE DESTINATION ${CMAKE_INSTALL_FULL_LIBDIR})
 
 set(CPP-NETLIB_HTTP_SERVER_SRCS server_request_parsers_impl.cpp)
@@ -34,6 +35,7 @@ install(TARGETS cppnetlib-server-parsers
     EXPORT cppnetlibTargets
     PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_FULL_INCLUDEDIR}
     LIBRARY DESTINATION ${CMAKE_INSTALL_FULL_LIBDIR}
+    RUNTIME DESTINATION ${CMAKE_INSTALL_FULL_BINDIR}
     ARCHIVE DESTINATION ${CMAKE_INSTALL_FULL_LIBDIR})
 
 set(CPP-NETLIB_HTTP_CLIENT_SRCS client.cpp)
@@ -62,4 +64,5 @@ install(TARGETS cppnetlib-client-connections
     EXPORT cppnetlibTargets
     PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_FULL_INCLUDEDIR}
     LIBRARY DESTINATION ${CMAKE_INSTALL_FULL_LIBDIR}
+    RUNTIME DESTINATION ${CMAKE_INSTALL_FULL_BINDIR}
     ARCHIVE DESTINATION ${CMAKE_INSTALL_FULL_LIBDIR})

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Taj Morton <tajmorton@gmail.com>
Date: Sun, 23 Mar 2025 20:40:29 +0000
Subject: [PATCH 2/2] Compatibility with boost 1.83

Applies https://github.com/cpp-netlib/cpp-netlib/commit/552ce94bd91c055f11ba524adf0ca0712063d711
to 0.13.0.

diff --git a/boost/network/protocol/http/server/impl/parsers.ipp b/boost/network/protocol/http/server/impl/parsers.ipp
index 1111111..2222222 100644
--- a/boost/network/protocol/http/server/impl/parsers.ipp
+++ b/boost/network/protocol/http/server/impl/parsers.ipp
@@ -13,6 +13,7 @@
 #include <tuple>
 #include <boost/fusion/include/std_tuple.hpp>
 #include <boost/network/protocol/http/message/header.hpp>
+#include <boost/regex/pending/unicode_iterator.hpp>
 
 #ifdef BOOST_NETWORK_NO_LIB
 #ifndef BOOST_NETWORK_INLINE
@@ -32,8 +33,8 @@ typedef std::basic_string<uint32_t> u32_string;
 template <>  // <typename Attrib, typename T, typename Enable>
 struct assign_to_container_from_value<std::string, u32_string, void> {
   static void call(u32_string const& val, std::string& attr) {
-    u32_to_u8_iterator<u32_string::const_iterator> begin = val.begin(),
-                                                   end = val.end();
+    boost::u32_to_u8_iterator<u32_string::const_iterator> begin = val.begin(),
+                                                          end = val.end();
     for (; begin != end; ++begin) attr += *begin;
   }
 };
