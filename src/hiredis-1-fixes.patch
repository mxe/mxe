This file is part of MXE. See LICENSE.md for licensing information.

Contains ad hoc patches for cross building.

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Tomas Kalibera <tomas.kalibera@gmail.com>
Date: Thu, 21 Sep 2023 11:41:17 +0200
Subject: [PATCH 1/1] Fixes for static linking.


diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1111111..2222222 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -6,6 +6,7 @@ OPTION(DISABLE_TESTS "If tests should be compiled or not" OFF)
 OPTION(ENABLE_SSL_TESTS "Should we test SSL connections" OFF)
 OPTION(ENABLE_EXAMPLES "Enable building hiredis examples" OFF)
 OPTION(ENABLE_ASYNC_TESTS "Should we run all asynchronous API tests" OFF)
+OPTION(BUILD_SHARED_LIBS "Build hiredis as a shared library" ON)
 
 MACRO(getVersionBit name)
   SET(VERSION_REGEX "^#define ${name} (.+)$")
diff --git a/hiredis.pc.in b/hiredis.pc.in
index 1111111..2222222 100644
--- a/hiredis.pc.in
+++ b/hiredis.pc.in
@@ -8,5 +8,5 @@ pkgincludedir=${includedir}/hiredis
 Name: hiredis
 Description: Minimalistic C client library for Redis.
 Version: @PROJECT_VERSION@
-Libs: -L${libdir} -lhiredis
+Libs: -L${libdir} -lhiredis -lws2_32 -lcrypt32
 Cflags: -I${pkgincludedir} -I${includedir} -D_FILE_OFFSET_BITS=64
diff --git a/hiredis_ssl.pc.in b/hiredis_ssl.pc.in
index 1111111..2222222 100644
--- a/hiredis_ssl.pc.in
+++ b/hiredis_ssl.pc.in
@@ -9,5 +9,5 @@ Name: hiredis_ssl
 Description: SSL Support for hiredis.
 Version: @PROJECT_VERSION@
 Requires: hiredis
-Libs: -L${libdir} -lhiredis_ssl
+Libs: -L${libdir} -lhiredis_ssl -lws2_32 -lcrypt32
 Libs.private: -lssl -lcrypto
diff --git a/test.c b/test.c
index 1111111..2222222 100644
--- a/test.c
+++ b/test.c
@@ -78,7 +78,7 @@ static int tests = 0, fails = 0, skips = 0;
 
 static void millisleep(int ms)
 {
-#ifdef _MSC_VER
+#ifdef _WIN32
     Sleep(ms);
 #else
     usleep(ms*1000);
@@ -86,7 +86,7 @@ static void millisleep(int ms)
 }
 
 static long long usec(void) {
-#ifndef _MSC_VER
+#ifndef _WIN32
     struct timeval tv;
     gettimeofday(&tv,NULL);
     return (((long long)tv.tv_sec)*1000000)+tv.tv_usec;
